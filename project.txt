#include<bits/stdc++.h>
#include "files.h"
#include "editor.h"

using namespace std;
/* add new text at the end of the file */
void add_to_file(const string &filename, const string &text) {
    ofstream stream(filename, ios::app);
    stream<<text;
    stream.close();
}
/* display the content of the file */
void Display_the_content(const string &filename){
  fstream stream(filename, ios::in);
        string line;
           while(getline(stream,line)){
               cout<<line<<endl;
                }
}
/* clear the file */
void empty_file(const string &filename){
    ofstream stream(filename, ios::out | ios::trunc);
}
/* encrypt the file */
void Encrypt_file (const string &filename){
   fstream stream(filename, ios::in);
    string line , allFile;
    while(getline(stream,line)){
                 allFile +=line;
                 allFile +='\n';
               }
              stream.close();
               fstream file(filename , ios::out);
               string encrypt;
                   for(int i = 0 ; i<allFile.size(); i++){
                        if(allFile[i] == '\n'){
                            encrypt +='\n';
                        }else{
                       char e = allFile[i]+1;
                       encrypt+=e;

                        }
               }

                         stream<<encrypt<<endl;
                         stream.close();
    }
/* decrypt the file*/
void Decrypt_file(const string &filename){
    fstream stream(filename, ios::in);
    string line , allFile;
    while(getline(stream,line)){
        allFile +=line;
        allFile +='\n';
    }
    stream.close();
    fstream file(filename , ios::out);
    string encrypt;
    for(int i = 0 ; i<allFile.size(); i++){
        if(allFile[i] == '\n'){
            encrypt +='\n';
        }else{
            char e = allFile[i]-1;
            encrypt+=e;

        }
    }

    stream<<encrypt<<endl;
    stream.close();
}